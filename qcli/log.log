[2023-01-26T21:34:17Z INFO]: Basic config successfully loaded
[2023-01-26T21:34:17Z INFO]: Checking quay configurations file in yaml-files/ directory...
[2023-01-26T21:34:17Z INFO]: Config verified from  "example-organization.yaml" 
[2023-01-26T21:34:17Z INFO]: Config verified from  "example-organization2.yaml" 
[2023-01-26T21:34:17Z INFO]: Config verified from  "example-organization3.yaml" 
[2023-01-26T21:34:17Z INFO]: Config verified from  "example-organization4.yaml" 
[2023-01-26T21:34:17Z INFO]: Config verified from  "example-organization5.yaml" 
[2023-01-26T21:34:17Z INFO]: Config verified from  "example-organization6.yaml" 
[2023-01-26T21:34:17Z INFO]: Loading quay configurations file in yaml-files/ directory...
[2023-01-26T21:34:17Z INFO]: Loading config from  "example-organization.yaml" 
[2023-01-26T21:34:17Z INFO]: Loading config from  "example-organization2.yaml" 
[2023-01-26T21:34:17Z INFO]: Loading config from  "example-organization3.yaml" 
[2023-01-26T21:34:17Z INFO]: Loading config from  "example-organization4.yaml" 
[2023-01-26T21:34:17Z INFO]: Loading config from  "example-organization5.yaml" 
[2023-01-26T21:34:17Z INFO]: Loading config from  "example-organization6.yaml" 
[2023-01-26T21:34:17Z INFO]: Creating quay configurations...
[2023-01-26T21:34:17Z INFO]: Processing config for organization: exampleorg
[2023-01-26T21:34:17Z INFO]: Processing config for organization: exampleorg2
[2023-01-26T21:34:17Z INFO]: Processing config for organization: exampleorg3
[2023-01-26T21:34:17Z INFO]: Processing config for organization: exampleorg4
[2023-01-26T21:34:17Z INFO]: Processing config for organization: exampleorg5
[2023-01-26T21:34:17Z INFO]: Processing config for organization: exampleorg6
[2023-01-26T21:34:17Z INFO]: Processing config for organization: exampleorg
[2023-01-26T21:34:17Z INFO]: Processing config for organization: exampleorg
[2023-01-26T21:34:17Z INFO]: TOTAL REQUESTS : 303
[2023-01-26T21:34:17Z INFO]: Creating 8 organization cuncurrently
[2023-01-26T21:34:18Z INFO]: QuayResponse { response: Object {"detail": String("A user or organization with this name already exists"), "error_message": String("A user or organization with this name already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Org: exampleorg Endpoint: example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb" }
[2023-01-26T21:34:18Z INFO]: QuayResponse { response: Object {"detail": String("A user or organization with this name already exists"), "error_message": String("A user or organization with this name already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Org: exampleorg2 Endpoint: example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb" }
[2023-01-26T21:34:18Z INFO]: QuayResponse { response: Object {"detail": String("A user or organization with this name already exists"), "error_message": String("A user or organization with this name already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Org: exampleorg3 Endpoint: example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb" }
[2023-01-26T21:34:18Z INFO]: QuayResponse { response: Object {"detail": String("A user or organization with this name already exists"), "error_message": String("A user or organization with this name already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Org: exampleorg4 Endpoint: example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb" }
[2023-01-26T21:34:18Z INFO]: QuayResponse { response: Object {"detail": String("A user or organization with this name already exists"), "error_message": String("A user or organization with this name already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Org: exampleorg5 Endpoint: example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb" }
[2023-01-26T21:34:18Z INFO]: QuayResponse { response: Object {"detail": String("A user or organization with this name already exists"), "error_message": String("A user or organization with this name already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Org: exampleorg6 Endpoint: example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb" }
[2023-01-26T21:34:18Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/organization/): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:18Z INFO]: QuayResponse { response: Object {"detail": String("A user or organization with this name already exists"), "error_message": String("A user or organization with this name already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Org: exampleorg Endpoint: example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb" }
[2023-01-26T21:34:18Z INFO]: Creating 17 robots cuncurrently
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg+reader")}, status_code: 400, description: "Creating robot 'reader' for organization 'exampleorg'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg+writer")}, status_code: 400, description: "Creating robot 'writer' for organization 'exampleorg'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg2+reader")}, status_code: 400, description: "Creating robot 'reader' for organization 'exampleorg2'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg2+writer")}, status_code: 400, description: "Creating robot 'writer' for organization 'exampleorg2'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg3+reader")}, status_code: 400, description: "Creating robot 'reader' for organization 'exampleorg3'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg3+writer")}, status_code: 400, description: "Creating robot 'writer' for organization 'exampleorg3'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg4+reader")}, status_code: 400, description: "Creating robot 'reader' for organization 'exampleorg4'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg4+writer")}, status_code: 400, description: "Creating robot 'writer' for organization 'exampleorg4'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg5+reader")}, status_code: 400, description: "Creating robot 'reader' for organization 'exampleorg5'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg5+writer")}, status_code: 400, description: "Creating robot 'writer' for organization 'exampleorg5'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg5+giorgiaaaa")}, status_code: 400, description: "Creating robot 'giorgiaaaa' for organization 'exampleorg5'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg6+reader")}, status_code: 400, description: "Creating robot 'reader' for organization 'exampleorg6'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg6+writer")}, status_code: 400, description: "Creating robot 'writer' for organization 'exampleorg6'" }
[2023-01-26T21:34:20Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/organization/exampleorg/robots/reader): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:20Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/organization/exampleorg/robots/writer): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg+reader")}, status_code: 400, description: "Creating robot 'reader' for organization 'exampleorg'" }
[2023-01-26T21:34:20Z INFO]: QuayResponse { response: Object {"message": String("Existing robot with name: exampleorg+writer")}, status_code: 400, description: "Creating robot 'writer' for organization 'exampleorg'" }
[2023-01-26T21:34:20Z INFO]: Creating 8 teams cuncurrently
[2023-01-26T21:34:21Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "can_view": Bool(true), "description": String(""), "name": String("maintainers"), "new_team": Bool(false), "role": String("member")}, status_code: 200, description: "Creating team 'maintainers' for organization 'exampleorg'" }
[2023-01-26T21:34:21Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "can_view": Bool(true), "description": String(""), "name": String("maintainers"), "new_team": Bool(false), "role": String("member")}, status_code: 200, description: "Creating team 'maintainers' for organization 'exampleorg2'" }
[2023-01-26T21:34:21Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "can_view": Bool(true), "description": String(""), "name": String("maintainers"), "new_team": Bool(false), "role": String("member")}, status_code: 200, description: "Creating team 'maintainers' for organization 'exampleorg3'" }
[2023-01-26T21:34:21Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "can_view": Bool(true), "description": String(""), "name": String("maintainers"), "new_team": Bool(false), "role": String("member")}, status_code: 200, description: "Creating team 'maintainers' for organization 'exampleorg4'" }
[2023-01-26T21:34:21Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "can_view": Bool(true), "description": String(""), "name": String("maintainers"), "new_team": Bool(false), "role": String("member")}, status_code: 200, description: "Creating team 'maintainers' for organization 'exampleorg5'" }
[2023-01-26T21:34:21Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "can_view": Bool(true), "description": String(""), "name": String("maintainers"), "new_team": Bool(false), "role": String("member")}, status_code: 200, description: "Creating team 'maintainers' for organization 'exampleorg6'" }
[2023-01-26T21:34:21Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/organization/exampleorg/team/maintainers): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:21Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "can_view": Bool(true), "description": String(""), "name": String("maintainers"), "new_team": Bool(false), "role": String("member")}, status_code: 200, description: "Creating team 'maintainers' for organization 'exampleorg'" }
[2023-01-26T21:34:21Z INFO]: Adding 16 team members cuncurrently
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User valeidm is already a member of team maintainers")}, status_code: 400, description: "exampleorg" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User exampleorg+writer is already a member of team maintainers")}, status_code: 400, description: "exampleorg" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User valeidm is already a member of team maintainers")}, status_code: 400, description: "exampleorg2" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User exampleorg2+writer is already a member of team maintainers")}, status_code: 400, description: "exampleorg2" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User valeidm is already a member of team maintainers")}, status_code: 400, description: "exampleorg3" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User exampleorg3+writer is already a member of team maintainers")}, status_code: 400, description: "exampleorg3" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User valeidm is already a member of team maintainers")}, status_code: 400, description: "exampleorg4" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User exampleorg4+writer is already a member of team maintainers")}, status_code: 400, description: "exampleorg4" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User valeidm is already a member of team maintainers")}, status_code: 400, description: "exampleorg5" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User exampleorg5+writer is already a member of team maintainers")}, status_code: 400, description: "exampleorg5" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User valeidm is already a member of team maintainers")}, status_code: 400, description: "exampleorg6" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User exampleorg6+writer is already a member of team maintainers")}, status_code: 400, description: "exampleorg6" }
[2023-01-26T21:34:22Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/organization/exampleorg/team/maintainers/members/valeidm): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:22Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/organization/exampleorg/team/maintainers/members/exampleorg+writer): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User valeidm is already a member of team maintainers")}, status_code: 400, description: "exampleorg" }
[2023-01-26T21:34:22Z INFO]: QuayResponse { response: Object {"message": String("User exampleorg+writer is already a member of team maintainers")}, status_code: 400, description: "exampleorg" }
[2023-01-26T21:34:22Z INFO]: Creating 25 repositories cuncurrently
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'alpine' for organization 'exampleorg'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'demorepo' for organization 'exampleorg'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'nested/demorepo' for organization 'exampleorg'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'alpine' for organization 'exampleorg2'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'demorepo' for organization 'exampleorg2'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'nested/demorepo' for organization 'exampleorg2'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'alpine' for organization 'exampleorg3'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'demorepo' for organization 'exampleorg3'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'nested/demorepo' for organization 'exampleorg3'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'alpine' for organization 'exampleorg4'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'demorepo' for organization 'exampleorg4'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'nested/demorepo' for organization 'exampleorg4'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'alpine' for organization 'exampleorg5'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'demorepo' for organization 'exampleorg5'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'nested/demorepo' for organization 'exampleorg5'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'alpine' for organization 'exampleorg6'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'alpine2' for organization 'exampleorg6'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'demorepo' for organization 'exampleorg6'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'nested/demorepo' for organization 'exampleorg6'" }
[2023-01-26T21:34:25Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:25Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:25Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'alpine' for organization 'exampleorg'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'demorepo' for organization 'exampleorg'" }
[2023-01-26T21:34:25Z INFO]: QuayResponse { response: Object {"detail": String("Repository already exists"), "error_message": String("Repository already exists"), "error_type": String("invalid_request"), "status": Number(400), "title": String("invalid_request"), "type": String("https://example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb/api/v1/error/invalid_request")}, status_code: 400, description: "Creating repository 'nested/demorepo' for organization 'exampleorg'" }
[2023-01-26T21:34:25Z INFO]: Delete extra user and robot permission from 25 repository cuncurrently
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg+reader": Object {"avatar": Object {"color": String("#2ca02c"), "hash": String("441ed9838409733df75b996d7c5b3aec897e4f6c2d8bdc1006f6ce50b50292e3"), "kind": String("robot"), "name": String("exampleorg+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+reader"), "role": String("read")}, "exampleorg+writer": Object {"avatar": Object {"color": String("#5254a3"), "hash": String("35b517a09b22c7b25653da0eb67759015c6d61e09d972d5defab35950e1918c1"), "kind": String("robot"), "name": String("exampleorg+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg+writer": Object {"avatar": Object {"color": String("#5254a3"), "hash": String("35b517a09b22c7b25653da0eb67759015c6d61e09d972d5defab35950e1918c1"), "kind": String("robot"), "name": String("exampleorg+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg2+reader": Object {"avatar": Object {"color": String("#ff7f0e"), "hash": String("8221b0c0dbb169bd58b26042a72b56d36c505764074f94ebcab63b5fd2ca527e"), "kind": String("robot"), "name": String("exampleorg2+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg2+reader"), "role": String("read")}, "exampleorg2+writer": Object {"avatar": Object {"color": String("#d62728"), "hash": String("8669cce3f7abd3c1d769e8acc25a6ce58468b64c51ba10bcc03e18457a7503cb"), "kind": String("robot"), "name": String("exampleorg2+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg2+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg2+writer": Object {"avatar": Object {"color": String("#d62728"), "hash": String("8669cce3f7abd3c1d769e8acc25a6ce58468b64c51ba10bcc03e18457a7503cb"), "kind": String("robot"), "name": String("exampleorg2+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg2+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg3+reader": Object {"avatar": Object {"color": String("#a55194"), "hash": String("5f293d78cdfb0d6f76de3e588f7f85b2dfab837bf2da0e9a4187c3325d054185"), "kind": String("robot"), "name": String("exampleorg3+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg3+reader"), "role": String("read")}, "exampleorg3+writer": Object {"avatar": Object {"color": String("#ff9896"), "hash": String("07de26a1f5ee80c87ece22d30d6e7f1d9d02e8c71205a86cc5030b4925ae6166"), "kind": String("robot"), "name": String("exampleorg3+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg3+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg3+writer": Object {"avatar": Object {"color": String("#ff9896"), "hash": String("07de26a1f5ee80c87ece22d30d6e7f1d9d02e8c71205a86cc5030b4925ae6166"), "kind": String("robot"), "name": String("exampleorg3+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg3+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg4+reader": Object {"avatar": Object {"color": String("#6b6ecf"), "hash": String("562ff31a232b266e26ebce0a77cb3bf4177174287b35051a1adf5d0d2e8a4702"), "kind": String("robot"), "name": String("exampleorg4+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg4+reader"), "role": String("read")}, "exampleorg4+writer": Object {"avatar": Object {"color": String("#98df8a"), "hash": String("85508e4f5bf8e99c7060fbfe971aaf3a6127d5ad084529d36b14e60d86a5e6dc"), "kind": String("robot"), "name": String("exampleorg4+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg4+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg4+writer": Object {"avatar": Object {"color": String("#98df8a"), "hash": String("85508e4f5bf8e99c7060fbfe971aaf3a6127d5ad084529d36b14e60d86a5e6dc"), "kind": String("robot"), "name": String("exampleorg4+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg4+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg5+reader": Object {"avatar": Object {"color": String("#c7c7c7"), "hash": String("2fe23bc056d2f2d90d157e8756cd770afb4f7beeecd1018f93cb3051f929ffdd"), "kind": String("robot"), "name": String("exampleorg5+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg5+reader"), "role": String("read")}, "exampleorg5+writer": Object {"avatar": Object {"color": String("#e7ba52"), "hash": String("de60c683fbcec60c129e9eb355d1a8f887f3eeff8b84232d9ccf2f5a917544bf"), "kind": String("robot"), "name": String("exampleorg5+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg5+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg5+writer": Object {"avatar": Object {"color": String("#e7ba52"), "hash": String("de60c683fbcec60c129e9eb355d1a8f887f3eeff8b84232d9ccf2f5a917544bf"), "kind": String("robot"), "name": String("exampleorg5+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg5+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg6+reader": Object {"avatar": Object {"color": String("#7f7f7f"), "hash": String("ae209cebdf5470aa83a9e9820c4bbcb6564daa9c08241d79c535beb09e80e898"), "kind": String("robot"), "name": String("exampleorg6+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg6+reader"), "role": String("read")}, "exampleorg6+writer": Object {"avatar": Object {"color": String("#ff7f0e"), "hash": String("42b32b53897259a635f07919db411f431e08816288f331463fab710bf7d38275"), "kind": String("robot"), "name": String("exampleorg6+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg6+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg6+reader": Object {"avatar": Object {"color": String("#7f7f7f"), "hash": String("ae209cebdf5470aa83a9e9820c4bbcb6564daa9c08241d79c535beb09e80e898"), "kind": String("robot"), "name": String("exampleorg6+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg6+reader"), "role": String("read")}, "exampleorg6+writer": Object {"avatar": Object {"color": String("#ff7f0e"), "hash": String("42b32b53897259a635f07919db411f431e08816288f331463fab710bf7d38275"), "kind": String("robot"), "name": String("exampleorg6+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg6+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg6+writer": Object {"avatar": Object {"color": String("#ff7f0e"), "hash": String("42b32b53897259a635f07919db411f431e08816288f331463fab710bf7d38275"), "kind": String("robot"), "name": String("exampleorg6+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg6+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:27Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/alpine/permissions/user/): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:27Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/demorepo/permissions/user/): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:27Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/nested/demorepo/permissions/user/): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg+reader": Object {"avatar": Object {"color": String("#2ca02c"), "hash": String("441ed9838409733df75b996d7c5b3aec897e4f6c2d8bdc1006f6ce50b50292e3"), "kind": String("robot"), "name": String("exampleorg+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+reader"), "role": String("read")}, "exampleorg+writer": Object {"avatar": Object {"color": String("#5254a3"), "hash": String("35b517a09b22c7b25653da0eb67759015c6d61e09d972d5defab35950e1918c1"), "kind": String("robot"), "name": String("exampleorg+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:27Z INFO]: QuayResponse { response: Object {"permissions": Object {"exampleorg+writer": Object {"avatar": Object {"color": String("#5254a3"), "hash": String("35b517a09b22c7b25653da0eb67759015c6d61e09d972d5defab35950e1918c1"), "kind": String("robot"), "name": String("exampleorg+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+writer"), "role": String("write")}, "valeidm": Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:27Z INFO]: Delete extra team permission from 25 repository cuncurrently
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {"maintainers": Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {"maintainers": Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}}}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {"maintainers": Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}}}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {"maintainers": Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}}}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {"maintainers": Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}}}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {"maintainers": Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}}}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {"maintainers": Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}}}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:30Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/alpine/permissions/team/): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:30Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/demorepo/permissions/team/): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:30Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/nested/demorepo/permissions/team/): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {"maintainers": Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:30Z INFO]: QuayResponse { response: Object {"permissions": Object {}}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:30Z INFO]: Creating 52 repositories permissions cuncurrently
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#2ca02c"), "hash": String("441ed9838409733df75b996d7c5b3aec897e4f6c2d8bdc1006f6ce50b50292e3"), "kind": String("robot"), "name": String("exampleorg+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+reader"), "role": String("read")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#5254a3"), "hash": String("35b517a09b22c7b25653da0eb67759015c6d61e09d972d5defab35950e1918c1"), "kind": String("robot"), "name": String("exampleorg+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+writer"), "role": String("write")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#5254a3"), "hash": String("35b517a09b22c7b25653da0eb67759015c6d61e09d972d5defab35950e1918c1"), "kind": String("robot"), "name": String("exampleorg+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+writer"), "role": String("write")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ff7f0e"), "hash": String("8221b0c0dbb169bd58b26042a72b56d36c505764074f94ebcab63b5fd2ca527e"), "kind": String("robot"), "name": String("exampleorg2+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg2+reader"), "role": String("read")}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#d62728"), "hash": String("8669cce3f7abd3c1d769e8acc25a6ce58468b64c51ba10bcc03e18457a7503cb"), "kind": String("robot"), "name": String("exampleorg2+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg2+writer"), "role": String("write")}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#d62728"), "hash": String("8669cce3f7abd3c1d769e8acc25a6ce58468b64c51ba10bcc03e18457a7503cb"), "kind": String("robot"), "name": String("exampleorg2+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg2+writer"), "role": String("write")}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg2" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#a55194"), "hash": String("5f293d78cdfb0d6f76de3e588f7f85b2dfab837bf2da0e9a4187c3325d054185"), "kind": String("robot"), "name": String("exampleorg3+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg3+reader"), "role": String("read")}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ff9896"), "hash": String("07de26a1f5ee80c87ece22d30d6e7f1d9d02e8c71205a86cc5030b4925ae6166"), "kind": String("robot"), "name": String("exampleorg3+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg3+writer"), "role": String("write")}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ff9896"), "hash": String("07de26a1f5ee80c87ece22d30d6e7f1d9d02e8c71205a86cc5030b4925ae6166"), "kind": String("robot"), "name": String("exampleorg3+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg3+writer"), "role": String("write")}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg3" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#6b6ecf"), "hash": String("562ff31a232b266e26ebce0a77cb3bf4177174287b35051a1adf5d0d2e8a4702"), "kind": String("robot"), "name": String("exampleorg4+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg4+reader"), "role": String("read")}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#98df8a"), "hash": String("85508e4f5bf8e99c7060fbfe971aaf3a6127d5ad084529d36b14e60d86a5e6dc"), "kind": String("robot"), "name": String("exampleorg4+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg4+writer"), "role": String("write")}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#98df8a"), "hash": String("85508e4f5bf8e99c7060fbfe971aaf3a6127d5ad084529d36b14e60d86a5e6dc"), "kind": String("robot"), "name": String("exampleorg4+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg4+writer"), "role": String("write")}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg4" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#c7c7c7"), "hash": String("2fe23bc056d2f2d90d157e8756cd770afb4f7beeecd1018f93cb3051f929ffdd"), "kind": String("robot"), "name": String("exampleorg5+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg5+reader"), "role": String("read")}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#e7ba52"), "hash": String("de60c683fbcec60c129e9eb355d1a8f887f3eeff8b84232d9ccf2f5a917544bf"), "kind": String("robot"), "name": String("exampleorg5+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg5+writer"), "role": String("write")}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#e7ba52"), "hash": String("de60c683fbcec60c129e9eb355d1a8f887f3eeff8b84232d9ccf2f5a917544bf"), "kind": String("robot"), "name": String("exampleorg5+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg5+writer"), "role": String("write")}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg5" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#7f7f7f"), "hash": String("ae209cebdf5470aa83a9e9820c4bbcb6564daa9c08241d79c535beb09e80e898"), "kind": String("robot"), "name": String("exampleorg6+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg6+reader"), "role": String("read")}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ff7f0e"), "hash": String("42b32b53897259a635f07919db411f431e08816288f331463fab710bf7d38275"), "kind": String("robot"), "name": String("exampleorg6+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg6+writer"), "role": String("write")}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#7f7f7f"), "hash": String("ae209cebdf5470aa83a9e9820c4bbcb6564daa9c08241d79c535beb09e80e898"), "kind": String("robot"), "name": String("exampleorg6+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg6+reader"), "role": String("read")}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ff7f0e"), "hash": String("42b32b53897259a635f07919db411f431e08816288f331463fab710bf7d38275"), "kind": String("robot"), "name": String("exampleorg6+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg6+writer"), "role": String("write")}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ff7f0e"), "hash": String("42b32b53897259a635f07919db411f431e08816288f331463fab710bf7d38275"), "kind": String("robot"), "name": String("exampleorg6+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg6+writer"), "role": String("write")}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg6" }
[2023-01-26T21:34:34Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/alpine/permissions/user/exampleorg+reader): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:34Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/alpine/permissions/user/exampleorg+writer): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:34Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/alpine/permissions/team/maintainers): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:34Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/alpine/permissions/user/valeidm): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:34Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/nested/demorepo/permissions/user/exampleorg+writer): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:34Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/nested/demorepo/permissions/user/valeidm): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#2ca02c"), "hash": String("441ed9838409733df75b996d7c5b3aec897e4f6c2d8bdc1006f6ce50b50292e3"), "kind": String("robot"), "name": String("exampleorg+reader")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+reader"), "role": String("read")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#5254a3"), "hash": String("35b517a09b22c7b25653da0eb67759015c6d61e09d972d5defab35950e1918c1"), "kind": String("robot"), "name": String("exampleorg+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+writer"), "role": String("write")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#ffbb78"), "hash": String("23cf4ac7772729232936a0f4437a15fd33795acf2ccf69f3a7e22194c3601ec4"), "kind": String("team"), "name": String("maintainers")}, "name": String("maintainers"), "role": String("admin")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#5254a3"), "hash": String("35b517a09b22c7b25653da0eb67759015c6d61e09d972d5defab35950e1918c1"), "kind": String("robot"), "name": String("exampleorg+writer")}, "is_org_member": Bool(true), "is_robot": Bool(true), "name": String("exampleorg+writer"), "role": String("write")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: QuayResponse { response: Object {"avatar": Object {"color": String("#9ecae1"), "hash": String("f8e826279b719090e15df49e717e37922f75999aec41b31de884b79359a21198"), "kind": String("user"), "name": String("valeidm")}, "is_org_member": Bool(true), "is_robot": Bool(false), "name": String("valeidm"), "role": String("admin")}, status_code: 200, description: "exampleorg" }
[2023-01-26T21:34:34Z INFO]: Configuring 25 repositories mirror concurrently
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: String(""), status_code: 201, description: "Configuring mirror for repository 'alpine' for organization 'exampleorg'" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: String(""), status_code: 201, description: "Configuring mirror for repository 'alpine' for organization 'exampleorg2'" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: String(""), status_code: 201, description: "Configuring mirror for repository 'alpine' for organization 'exampleorg3'" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: String(""), status_code: 201, description: "Configuring mirror for repository 'alpine' for organization 'exampleorg4'" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: String(""), status_code: 201, description: "Configuring mirror for repository 'alpine' for organization 'exampleorg5'" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: String(""), status_code: 201, description: "Configuring mirror for repository 'alpine' for organization 'exampleorg6'" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: String(""), status_code: 201, description: "Configuring mirror for repository 'alpine2' for organization 'exampleorg6'" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z ERROR]: Error: error sending request for url (https://111111example-registry-quay-quay-enterprise.apps.ocphub.lab.seeweb1/api/v1/repository/exampleorg/alpine/changestate): error trying to connect: dns error: failed to lookup address information: Name or service not known
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: String(""), status_code: 201, description: "Configuring mirror for repository 'alpine' for organization 'exampleorg'" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
[2023-01-26T21:34:37Z INFO]: QuayResponse { response: Null, status_code: 200, description: "Mirroring disabled" }
