{"message":"hidden type for `impl Iterator<Item = String>` captures lifetime that does not appear in bounds","code":{"code":"E0700","explanation":"The `impl Trait` return type captures lifetime parameters that do not\nappear within the `impl Trait` itself.\n\nErroneous code example:\n\n```compile_fail,E0700\nuse std::cell::Cell;\n\ntrait Trait<'a> { }\n\nimpl<'a, 'b> Trait<'b> for Cell<&'a u32> { }\n\nfn foo<'x, 'y>(x: Cell<&'x u32>) -> impl Trait<'y>\nwhere 'x: 'y\n{\n    x\n}\n```\n\nHere, the function `foo` returns a value of type `Cell<&'x u32>`,\nwhich references the lifetime `'x`. However, the return type is\ndeclared as `impl Trait<'y>` -- this indicates that `foo` returns\n\"some type that implements `Trait<'y>`\", but it also indicates that\nthe return type **only captures data referencing the lifetime `'y`**.\nIn this case, though, we are referencing data with lifetime `'x`, so\nthis function is in error.\n\nTo fix this, you must reference the lifetime `'x` from the return\ntype. For example, changing the return type to `impl Trait<'y> + 'x`\nwould work:\n\n```\nuse std::cell::Cell;\n\ntrait Trait<'a> { }\n\nimpl<'a,'b> Trait<'b> for Cell<&'a u32> { }\n\nfn foo<'x, 'y>(x: Cell<&'x u32>) -> impl Trait<'y> + 'x\nwhere 'x: 'y\n{\n    x\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":589,"byte_end":593,"line_start":26,"line_end":26,"column_start":8,"column_end":12,"is_primary":false,"text":[{"text":"    s: &str","highlight_start":8,"highlight_end":12}],"label":"hidden type `Map<impl Iterator<Item = String>, [closure@src/main.rs:28:14: 28:23]>` captures the anonymous lifetime defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":634,"byte_end":660,"line_start":28,"line_end":28,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"    iter.map(move |s2| s2 + s)","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to declare that the `impl Trait` captures `'_`, you can add an explicit `'_` lifetime bound","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":627,"byte_end":627,"line_start":27,"line_end":27,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":") -> impl Iterator<Item = String> {","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":" + '_","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0700]\u001b[0m\u001b[0m\u001b[1m: hidden type for `impl Iterator<Item = String>` captures lifetime that does not appear in bounds\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:28:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    s: &str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhidden type `Map<impl Iterator<Item = String>, [closure@src/main.rs:28:14: 28:23]>` captures the anonymous lifetime defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> impl Iterator<Item = String> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    iter.map(move |s2| s2 + s)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: to declare that the `impl Trait` captures `'_`, you can add an explicit `'_` lifetime bound\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m) -> impl Iterator<Item = String>\u001b[0m\u001b[0m\u001b[38;5;10m + '_\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0700`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0700`.\u001b[0m\n"}
